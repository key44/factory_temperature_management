#include <Arduino.h>
#include <M5StickC.h>
#include "UNIT_ENV.h"
#include <WiFi.h>
#include <HTTPClient.h>
#include <ArduinoJson.h>
#include <time.h>

#define WIFI_SSID "Higashine07g"
#define WIFI_PASSWORD "musenyamamoto"
#define JST 3600* 9

SHT3X sht30;
QMP6988 qmp6988;

float tmp = 0.0;
float hum = 0.0;
float pressure = 0.0;
String time_now = "";

void setup() {
    Serial.begin(115200);

    M5.begin(); //Init M5Stack.  初始化M5Stack
    M5.Lcd.setRotation(3); // 
    //Wi-fi接続
    WiFi.begin(WIFI_SSID,WIFI_PASSWORD);
    while(WiFi.status() != WL_CONNECTED){
      delay(500);
    }
    M5.lcd.setTextSize(2);  //Set the text size to 2.  设置文字大小为2
    Wire.begin(); //Wire init, adding the I2C bus.  Wire初始化, 加入i2c总线
    qmp6988.init();
    M5.lcd.println(F("ENV Unit III test"));
    configTime(JST, 0, "ntp.nict.jp", "ntp.jst.mfeed.ad.jp");

}

void loop() {
    pressure = qmp6988.calcPressure();
    if(sht30.get()==0){ //Obtain the data of shT30.  获取sht30的数据
      tmp = sht30.cTemp;  //Store the temperature obtained from shT30.  将sht30获取到的温度存储
      hum = sht30.humidity; //Store the humidity obtained from the SHT30.  将sht30获取到的湿度存储
    }else{
      tmp=0,hum=0;
    }
    time_t t;
    struct tm *tm;
    t = time(NULL);
    tm = localtime(&t);
    time_now = String(String(tm->tm_year+1900) +'/'+ String(tm->tm_mon+1)+'/'+String(tm->tm_mday)+' '+String(tm->tm_hour)+':'+String(tm->tm_min));
    //Serial.printf(" %04d/%02d/%02d %02d:%02d\n", tm->tm_year+1900, tm->tm_mon+1, tm->tm_mday,tm->tm_hour, tm->tm_min);
    Serial.println(time_now);
    

    //make JSON
    char json[100];
    sprintf(json, "{\"location\":%s ,\"date\":%s , \"temp\": %2.1f , \"humid\": %2.1f }", "工場東", "2021/12/2 10:13", tmp, hum);

    //HTTPClient code start
    HTTPClient http;
    Serial.print("[HTTP] begin...\n");
    // configure traged server and url
    http.begin("http://168.138.52.183:9200/test_temp/data/"); //HTTP
    Serial.print("[HTTP] POST...\n");
    // start connection and send HTTP header
    int httpCode = http.POST(json);
    Serial.println(json);

    // httpCode will be negative on error
    if (httpCode > 0) {
      // HTTP header has been send and Server response header has been handled
      Serial.printf("[HTTP] GET... code: %d\n", httpCode);
    
      // file found at server
      if (httpCode == HTTP_CODE_OK) {
        String payload = http.getString();
        Serial.println(payload);
      }
    } else {
      Serial.printf("[HTTP] GET... failed, error: %s\n", http.errorToString(httpCode).c_str());
    }
    
    http.end();

    M5.lcd.fillRect(0,20,100,60,BLACK); //Fill the screen with black (to clear the screen).  将屏幕填充黑色(用来清屏)
    M5.lcd.setCursor(0,20);
    M5.Lcd.printf("Temp: %2.1f  \r\nHumi: %2.0f%%  \r\nPress:%2.0fhPa\r\n", tmp, hum, pressure/100);
    delay(2000);
}